SQL> 
SQL> CL SCR

SQL> REM SUB QUERY CAN BE USED TO COMPARE NESTED SUMMARY ITEM IN HAVING CLAUSE
SQL> 
SQL> REM SUMMARY FUNCCTIONS : MIN MAX COUNT   SUM AVG
SQL> 
SQL> SELECT AVG(SALARY) FROM EMPLOYEES;

AVG(SALARY)                                                                     
-----------                                                                     
       8775                                                                     

SQL> SELECT AVG(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = 50;

AVG(SALARY)                                                                     
-----------                                                                     
       3500                                                                     

SQL> SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY 1;

DEPARTMENT_ID AVG(SALARY)                                                       
------------- -----------                                                       
           10        4400                                                       
           20        9500                                                       
           50        3500                                                       
           60        6400                                                       
           80  10033.3333                                                       
           90  19333.3333                                                       
          110       10150                                                       
                     7000                                                       

8 rows selected.

SQL> SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID IN (20,60,110) GROUP BY DEPARTMENT_ID ORDER BY 1;

DEPARTMENT_ID AVG(SALARY)                                                       
------------- -----------                                                       
           20        9500                                                       
           60        6400                                                       
          110       10150                                                       

SQL> SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES HAVING DEPARTMENT_ID IN (20,60,110) GROUP BY DEPARTMENT_ID ORDER BY 1;

DEPARTMENT_ID AVG(SALARY)                                                       
------------- -----------                                                       
           20        9500                                                       
           60        6400                                                       
          110       10150                                                       

SQL> SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID HAVING DEPARTMENT_ID IN (20,60,110) ORDER BY 1;

DEPARTMENT_ID AVG(SALARY)                                                       
------------- -----------                                                       
           20        9500                                                       
           60        6400                                                       
          110       10150                                                       

SQL> SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

MAX(AVG(SALARY))                                                                
----------------                                                                
      19333.3333                                                                

SQL> SELECT DEPARTMENT_ID , MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;
SELECT DEPARTMENT_ID , MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID
       *
ERROR at line 1:
ORA-00937: not a single-group group function 


SQL> REM DISPLAY DEPARTMENT_ID AND AVERAGE SALARY FOR THE DEPARTMENT TO WHICH HIGHEST AVERAGE SALARY IS PAID
SQL> 
SQL> 
SQL> 
SQL> SELECT MIN(AVG(SALARY)) , MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID;

MIN(AVG(SALARY)) MAX(AVG(SALARY))                                               
---------------- ----------------                                               
            3500       19333.3333                                               

SQL> 
SQL> REM DISPLAY DEPARTMENT_ID AND AVERAGE SALARY FOR THE DEPARTMENT TO WHICH HIGHEST AVERAGE SALARY IS PAID
SQL> 
SQL> REM AVG(SALARY) = MAX(AVG(SALARY))
SQL> 
SQL> REM SUMAMRY = NESTED SUMMARY
SQL> 
SQL> SELECT DEPARTMENT_ID , AVG(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY DEPARTMENT_ID
  4  HAVING AVG(SALARY) = MAX(AVG(SALARY));
HAVING AVG(SALARY) = MAX(AVG(SALARY))
                         *
ERROR at line 4:
ORA-00935: group function is nested too deeply 


SQL> SELECT DEPARTMENT_ID , AVG(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY DEPARTMENT_ID
  4  HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES);
HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES)
                                 *
ERROR at line 4:
ORA-00978: nested group function without GROUP BY 


SQL> SELECT DEPARTMENT_ID , AVG(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY DEPARTMENT_ID
  4  HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY DEPARTMENT_ID);

DEPARTMENT_ID AVG(SALARY)                                                       
------------- -----------                                                       
           90  19333.3333                                                       

SQL> SELECT DEPARTMENT_ID , AVG(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT_ID ORDER BY 1;

DEPARTMENT_ID AVG(SALARY)                                                       
------------- -----------                                                       
           10        4400                                                       
           20        9500                                                       
           50        3500                                                       
           60        6400                                                       
           80  10033.3333                                                       
           90  19333.3333                                                       
          110       10150                                                       
                     7000                                                       

8 rows selected.

SQL> REM DISPLAY JOB_ID AND TOTAL SALARY FOR THE JOB TO WHICH LOWEST TOTAL SALARY IS PAID
SQL> 
SQL> SELECT JOB_ID , SUM(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY JOB_ID
  4  HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID);

JOB_ID     SUM(SALARY)                                                          
---------- -----------                                                          
AD_ASST           4400                                                          

SQL> SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY JOB_ID WHERE SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES);
SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY JOB_ID WHERE SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES)
                                                          *
ERROR at line 1:
ORA-00933: SQL command not properly ended 


SQL> SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID);

JOB_ID     SUM(SALARY)                                                          
---------- -----------                                                          
AD_ASST           4400                                                          

SQL> SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID);
SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID)
       *
ERROR at line 1:
ORA-00937: not a single-group group function 


SQL> SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES) GROUP BY JOB_ID;
SELECT JOB_ID, SUM(SALARY) FROM EMPLOYEES HAVING SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES) GROUP BY JOB_ID
                                                                           *
ERROR at line 1:
ORA-00978: nested group function without GROUP BY 


SQL> REM DISPLAY MANAGER_ID AND COUNT OF EMPLOYEES FOR THE MANAGER FOR WHICH HIGHEST NUMBER OF EMPLOYEES WORK/REPORT
SQL> 
SQL> SELECT MANAGER_ID , COUNT(*)
  2  FROM EMPLOYEES
  3  GROUP BY MANAGER_ID
  4  HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY MANAGER_ID);

MANAGER_ID   COUNT(*)                                                           
---------- ----------                                                           
       100          5                                                           

SQL> SELECT MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID WHERE COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY MANAGER_ID);
SELECT MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID WHERE COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY MANAGER_ID)
                                                               *
ERROR at line 1:
ORA-00933: SQL command not properly ended 


SQL> SELECT MANAGER_ID, COUNT(*) FROM EMPLOYEES GROUP BY MANAGER_ID HAVING COUNT(*) = (SELECT MAX(COUNT(*)) FROM EMPLOYEES GROUP BY MANAGER_ID);

MANAGER_ID   COUNT(*)                                                           
---------- ----------                                                           
       100          5                                                           

SQL> REM DISPLAY HIRE YEAR WISE AVERAGE SALARY FOR THE YEAR TO WHICH HIGHEST AVERAGE SALARY IS PAID
SQL> 
SQL> SELECT TO_CHAR(HIRE_DATE ,'YY'), AVG(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY TO_CHAR(HIRE_DATE ,'YY')
  4  HAVING  AVG(SALARY) = (SELECT  MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE ,'YY'));

TO AVG(SALARY)                                                                  
-- -----------                                                                  
93       17000                                                                  
89       17000                                                                  

SQL> SELECT AVG(SALARY) FROM EMPLOYEES GROUP BY TOCHAR('YYYY', HIRE_DATE) HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY TOCHAR('YYYY', HIRE_DATE));
SELECT AVG(SALARY) FROM EMPLOYEES GROUP BY TOCHAR('YYYY', HIRE_DATE) HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY TOCHAR('YYYY', HIRE_DATE))
                                           *
ERROR at line 1:
ORA-00904: "TOCHAR": invalid identifier 


SQL> SELECT AVG(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'YYYY') HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'YYYY'));

AVG(SALARY)                                                                     
-----------                                                                     
      17000                                                                     
      17000                                                                     

SQL> SELECT TO_CHAR(HIRE_DATE,'YYYY') , AVG(SALARY) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'YYYY') HAVING AVG(SALARY) = (SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY TO_CHAR(HIRE_DATE,'YYYY'));

TO_C AVG(SALARY)                                                                
---- -----------                                                                
1989       17000                                                                
1993       17000                                                                

SQL> REM DISPLAY JOB_ID AND AVERAGE SALARY FOR THE JOBS TO WHICH EITHER LOWEST AVERAGE SALARY OR HIGHEST AVERAGE SALARY IS PAID.
SQL> 
SQL> SELECT JOB_ID, AVG(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY JOB_ID
  4  HAVING  AVG(SALARY) = (SELECT  MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID) OR  AVG(SALARY) = (SELECT  MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID)
  5  ;

JOB_ID     AVG(SALARY)                                                          
---------- -----------                                                          
AD_PRES          24000                                                          
ST_CLERK          2925                                                          

SQL> SELECT JOB_ID, ABG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) IN ((SELECT MAX(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID));
SELECT JOB_ID, ABG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) IN ((SELECT MAX(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID))
                                                                                                         *
ERROR at line 1:
ORA-00907: missing right parenthesis 


SQL> SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) IN ((SELECT MAX(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID));
SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) IN ((SELECT MAX(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID))
                                                                                                         *
ERROR at line 1:
ORA-00907: missing right parenthesis 


SQL> SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) IN ((SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID));

JOB_ID     AVG(SALARY)                                                          
---------- -----------                                                          
AD_PRES          24000                                                          
ST_CLERK          2925                                                          

SQL> SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) = ANY ((SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID));

JOB_ID     AVG(SALARY)                                                          
---------- -----------                                                          
AD_PRES          24000                                                          
ST_CLERK          2925                                                          

SQL> SELECT JOB_ID, AVG(SALARY) FROM EMPLOYEES GROUP BY JOB_ID HAVING AVG(SALARY) = SOME ((SELECT MAX(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID), (SELECT MIN(AVG(SALARY)) FROM EMPLOYEES GROUP BY JOB_ID));

JOB_ID     AVG(SALARY)                                                          
---------- -----------                                                          
AD_PRES          24000                                                          
ST_CLERK          2925                                                          

SQL> REM DISPLAY MANAGER_ID AND TOTAL SALARY FOR ALL MANAGER EXCEPT THOSE WHO ARE PAID LOWEST TOTAL SALARY OR HIGHEST TOTAL SALARY
SQL> 
SQL> SELECT MANAGER_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID HAVING SUM(SALARY) NOT IN ((SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID) ,(SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID));

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       100       63300                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

8 rows selected.

SQL> SELECT MANAGER_ID, SUM(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY MANAGER_ID
  4   HAVING NOT  SUM(SALARY) = (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID)
  5   OR SUM(SALARY) = (SELECT SUM(AVG(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       201        6000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

8 rows selected.

SQL> SELECT MANAGER_ID, SUM(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY MANAGER_ID
  4   HAVING NOT  SUM(SALARY) = (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID)
  5   OR NOT SUM(SALARY) = (SELECT SUM(AVG(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       100       63300                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       201        6000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

9 rows selected.

SQL> SELECT MANAGER_ID, SUM(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY MANAGER_ID
  4   HAVING NOT  SUM(SALARY) = (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID)
  5   OR NOT SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       100       63300                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       201        6000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

9 rows selected.

SQL> SELECT MANAGER_ID, SUM(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY MANAGER_ID
  4   HAVING NOT  SUM(SALARY) = (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID)
  5  
SQL> 
SQL> SELECT MANAGER_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID
  2  HAVING SUM(SALARY) NOT IN ((SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID) ,
  3  (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID));

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       100       63300                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

8 rows selected.

SQL> SELECT MANAGER_ID, SUM(SALARY)
  2  FROM EMPLOYEES
  3  GROUP BY MANAGER_ID
  4   HAVING NOT  SUM(SALARY) = (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID)
  5   AND NOT SUM(SALARY) = (SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID);

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

7 rows selected.

SQL> SELECT MANAGER_ID, SUM(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID
  2  HAVING SUM(SALARY) NOT IN ((SELECT MIN(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID) ,
  3  (SELECT MAX(SUM(SALARY)) FROM EMPLOYEES GROUP BY MANAGER_ID));

MANAGER_ID SUM(SALARY)                                                          
---------- -----------                                                          
                 24000                                                          
       149       26600                                                          
       205        8300                                                          
       102        9000                                                          
       101       16400                                                          
       124       11700                                                          
       103       10200                                                          

7 rows selected.

SQL> SPOOL OFF
